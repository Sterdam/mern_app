version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - client
      - server
    networks:
      - mern-network
    extra_hosts:
      - "firewall:192.168.100.90"
      - "waf:192.168.20.13"
    # Security enhancements
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - DAC_OVERRIDE
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017" # Keeping this exposed as in your original config
    volumes:
      - mongo_data:/data/db
    networks:
      - mern-network
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    # Security enhancements
    command: ["--auth", "--bind_ip", "0.0.0.0", "--wiredTigerCacheSizeGB", "0.5"]
    cap_drop:
      - ALL
    cap_add:
      - DAC_OVERRIDE
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: node-server
    restart: always
    env_file:
      - .env
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      - mongodb
    networks:
      - mern-network
    # Security enhancements
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api"]
      interval: 30s
      timeout: 10s
      retries: 3

  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: react-client
    restart: always
    depends_on:
      - server
    networks:
      - mern-network
    # Security enhancements
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mern-network:
    driver: bridge
    # Security enhancements
    driver_opts:
      com.docker.network.bridge.name: "mern-net"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.enable_icc: "true"

volumes:
  mongo_data:
  uploads_data: